
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000138  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          00000002  00800100  00000138  000001ac  2**0
                  ALLOC
  2 .debug_aranges 00000020  00000000  00000000  000001ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  3 .debug_pubnames 00000056  00000000  00000000  000001cc  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   000000ea  00000000  00000000  00000222  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 0000009d  00000000  00000000  0000030c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000107  00000000  00000000  000003a9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000050  00000000  00000000  000004b0  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    0000009c  00000000  00000000  00000500  2**0
                  CONTENTS, READONLY, DEBUGGING
Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 57 00 	jmp	0xae	; 0xae <__vector_13>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 65 00 	jmp	0xca	; 0xca <__vector_15>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d0 e1       	ldi	r29, 0x10	; 16
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	11 e0       	ldi	r17, 0x01	; 1
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	e8 e3       	ldi	r30, 0x38	; 56
  84:	f1 e0       	ldi	r31, 0x01	; 1
  86:	02 c0       	rjmp	.+4      	; 0x8c <.do_copy_data_start>

00000088 <.do_copy_data_loop>:
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0

0000008c <.do_copy_data_start>:
  8c:	a0 30       	cpi	r26, 0x00	; 0
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <.do_copy_data_loop>

00000092 <__do_clear_bss>:
  92:	11 e0       	ldi	r17, 0x01	; 1
  94:	a0 e0       	ldi	r26, 0x00	; 0
  96:	b1 e0       	ldi	r27, 0x01	; 1
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a2 30       	cpi	r26, 0x02	; 2
  9e:	b1 07       	cpc	r27, r17
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 70 00 	call	0xe0	; 0xe0 <main>
  a6:	0c 94 9a 00 	jmp	0x134	; 0x134 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <__vector_13>:
//PWM Control=====================================
//================================================

//Turns on motor on overflow
//This is the up time of the PWM
ISR (TIMER1_COMPA_vect){
  ae:	1f 92       	push	r1
  b0:	0f 92       	push	r0
  b2:	0f b6       	in	r0, 0x3f	; 63
  b4:	0f 92       	push	r0
  b6:	11 24       	eor	r1, r1
  b8:	8f 93       	push	r24
PORTC = 0xFF;
  ba:	8f ef       	ldi	r24, 0xFF	; 255
  bc:	88 b9       	out	0x08, r24	; 8
}
  be:	8f 91       	pop	r24
  c0:	0f 90       	pop	r0
  c2:	0f be       	out	0x3f, r0	; 63
  c4:	0f 90       	pop	r0
  c6:	1f 90       	pop	r1
  c8:	18 95       	reti

000000ca <__vector_15>:

//Turns off motor on match with OCR0A
//This is the down time of the PWM
ISR (TIMER1_OVF_vect)
{
  ca:	1f 92       	push	r1
  cc:	0f 92       	push	r0
  ce:	0f b6       	in	r0, 0x3f	; 63
  d0:	0f 92       	push	r0
  d2:	11 24       	eor	r1, r1
PORTC = 0x00;
  d4:	18 b8       	out	0x08, r1	; 8
}
  d6:	0f 90       	pop	r0
  d8:	0f be       	out	0x3f, r0	; 63
  da:	0f 90       	pop	r0
  dc:	1f 90       	pop	r1
  de:	18 95       	reti

000000e0 <main>:
//================================================
//================================================

int main (void)
{
  e0:	8f ef       	ldi	r24, 0xFF	; 255
  e2:	87 b9       	out	0x07, r24	; 7


//Initializes timer
void initialize(void){
  DDRC=0xFF;
  PORTC=0x00;
  e4:	18 b8       	out	0x08, r1	; 8
  
  //sets motor speed to zero
  OCR1A = 1000;	// clear after 250 counts
  e6:	88 ee       	ldi	r24, 0xE8	; 232
  e8:	93 e0       	ldi	r25, 0x03	; 3
  ea:	90 93 89 00 	sts	0x0089, r25
  ee:	80 93 88 00 	sts	0x0088, r24
  
  //turns on interrupt vectors for timer0
  TIMSK1 = (1<<OCIE1A)|(1<<TOIE1) ;	//turn on ISR
  f2:	83 e0       	ldi	r24, 0x03	; 3
  f4:	80 93 6f 00 	sts	0x006F, r24

  // timer 1 prescalar to 64 
  TCCR1B = 1 ;
  f8:	81 e0       	ldi	r24, 0x01	; 1
  fa:	80 93 81 00 	sts	0x0081, r24

  counter = 0;
  fe:	10 92 01 01 	sts	0x0101, r1
 102:	10 92 00 01 	sts	0x0100, r1
  sei();	
 106:	78 94       	sei
 108:	ff cf       	rjmp	.-2      	; 0x108 <main+0x28>

0000010a <initialize>:
	};
}


//Initializes timer
void initialize(void){
 10a:	8f ef       	ldi	r24, 0xFF	; 255
 10c:	87 b9       	out	0x07, r24	; 7
  DDRC=0xFF;
  PORTC=0x00;
 10e:	18 b8       	out	0x08, r1	; 8
  
  //sets motor speed to zero
  OCR1A = 1000;	// clear after 250 counts
 110:	88 ee       	ldi	r24, 0xE8	; 232
 112:	93 e0       	ldi	r25, 0x03	; 3
 114:	90 93 89 00 	sts	0x0089, r25
 118:	80 93 88 00 	sts	0x0088, r24
  
  //turns on interrupt vectors for timer0
  TIMSK1 = (1<<OCIE1A)|(1<<TOIE1) ;	//turn on ISR
 11c:	83 e0       	ldi	r24, 0x03	; 3
 11e:	80 93 6f 00 	sts	0x006F, r24

  // timer 1 prescalar to 64 
  TCCR1B = 1 ;
 122:	81 e0       	ldi	r24, 0x01	; 1
 124:	80 93 81 00 	sts	0x0081, r24

  counter = 0;
 128:	10 92 01 01 	sts	0x0101, r1
 12c:	10 92 00 01 	sts	0x0100, r1
  sei();	
 130:	78 94       	sei
}
 132:	08 95       	ret

00000134 <_exit>:
 134:	f8 94       	cli

00000136 <__stop_program>:
 136:	ff cf       	rjmp	.-2      	; 0x136 <__stop_program>
